HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv")
View(HealthyRideRentals.2015.Q3)
HealthyRideRentals.2015.Q4 <- read.table("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.xlsx", header=TRUE, quote="\"")
View(HealthyRideRentals.2015.Q4)
View(HealthyRideRentals.2015.Q3)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv")
View(HealthyRideRentals.2015.Q4)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
View(rental_total)
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
rental_total$UserType <- as.numeric(rental_total$UserType)
class(HealthyRideRentals.2015.Q3$UserType)
class(rental_total$TripId)
str(rental_total)
rental_total$StopTime <- as.numeric(rental_total$StopTime)
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors=FALSE)
HealthyRideRentals.2015.Q4 <- read.table("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.xlsx", header=TRUE, stringsAsFactors=FALSE)
HealthyRideRentals.2015.Q4 <- read.table("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.xlsx", header=TRUE, quote="\"", stringsAsFactors=FALSE)
View(HealthyRideRentals.2015.Q4)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
View(rental_total)
rental_total$UserType <- as.numeric(rental_total$UserType)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
str(rental_total)
rental_total$UserType <- as.character(rental_total$UserType)
rental_total$UserType <- as.numeric(rental_total$UserType)
View(HealthyRideRentals.2015.Q4)
View(HealthyRideRentals.2015.Q3)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
table(rental_total$UserType)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
is.na(rental_total)
rental_total <- na.omit(rental_total)
is.na(rental_total)
str(rental_total)
rental_total$UserType <- as.numeric(rental_total$UserType)
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv")
View(HealthyRideRentals.2015.Q3)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv")
View(HealthyRideRentals.2015.Q4)
tag <- rownames(is.na(rental_total))
tag
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
tag <- rownames(is.na(rental_total))
tag <- rownames(is.na(rental_total$UserType))
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total <- rental_total[complete.cases(rental_total), ]
# convert to numeric
rental_total$UserType <- as.numeric(rental_total$UserType)
str(rental_total)
View(rental_total)
StartDay <- format(as.POSIXct(strptime(rental_total$StartTime,"%d/%m/%Y %H:%M",tz="")) ,format = "%d")
rental_total$StartDay <- StartDay
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors=FALSE)
HealthyRideRentals.2015.Q4 <- read.table("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.xlsx", header=TRUE, stringsAsFactors=FALSE)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total <- rental_total[complete.cases(rental_total), ]
# convert to numeric
rental_total$UserType <- as.numeric(rental_total$UserType)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors=FALSE)
View(HealthyRideRentals.2015.Q4)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total <- rental_total[complete.cases(rental_total), ]
rental_total$UserType <- as.numeric(rental_total$UserType)
rental_total <- rental_total[complete.cases(rental_total), ]
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors=FALSE)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors=FALSE)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
str(rental_total)
rental_total <- rental_total[complete.cases(rental_total$UserType), ]
rental_total <- rental_total[complete.cases(rental_total$UserType), ]
complete.cases(rental_total$UserType)
View(rental_total)
rental_total$UserType <- as.numeric(rental_total$UserType)
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors=FALSE)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors=FALSE)
# combine two dataframe into one
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
rental_total <- rental_total[complete.cases(rental_total), ]
rental_total[17,]
class(rental_total[17,8])
rental_total[17,8]
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv")
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv")
# combine two dataframe into one
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total <- rental_total[complete.cases(rental_total), ]
View(rental_total)
class(rental_total[17,8])
rental_total[17,8]
rental_total[17,8]
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors = FALSE)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors = FALSE)
# combine two dataframe into one
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
rental_total[which(rental_total$UserType == "")] <- NA
rental_total$UserType[which(rental_total$UserType == "")] <- NA
class(rental_total[17,8])
rental_total[17,8]
rental_total <- rental_total[complete.cases(rental_total), ]
rental_total$UserType <- as.numeric(rental_total$UserType)
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors = FALSE)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors = FALSE)
# combine two dataframe into one
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total$UserType[which(rental_total$UserType == "")] <- NA
rental_total <- rental_total[complete.cases(rental_total), ]
rental_total$UserType <- suppressWarnings(as.numeric(rental_total$UserType))
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors = FALSE)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors = FALSE)
# combine two dataframe into one
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total$UserType[which(rental_total$UserType == "")] <- NA
rental_total <- rental_total[complete.cases(rental_total), ]
rental_total$UserType[which(rental_total$UserType == "")] <- NA
rental_total <- rental_total[complete.cases(rental_total), ]
str(rental_total)
rental_total$StartTime <- as.character(rental_total$StartTime)
rental_total$StopTime <- as.character(rental_total$StopTime)
rental_total$UserType <- as.character(rental_total$UserType)
rental_total$UserType <- as.numeric(rental_total$UserType)
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors = FALSE)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors = FALSE)
# combine two dataframe into one
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total$UserType[which(rental_total$UserType == "")] <- NA
rental_total <- rental_total[complete.cases(rental_total), ]
str(rental_total)
rental_total$StartTime <- as.character(rental_total$StartTime)
rental_total$StopTime <- as.character(rental_total$StopTime)
rental_total$UserType <- as.character(rental_total$UserType)
StartDay <- format(as.POSIXct(strptime(rental_total$StartTime,"%d/%m/%y %H:%M",tz="")) ,format = "%d")
rental_total$StartDay <- StartDay
tag <- as.data.frame(str_split_fixed(rental_total$StartTime, "/", 3))
library(stringr)
tag <- as.data.frame(str_split_fixed(rental_total$StartTime, "/", 3))
View(tag)
tag2 <- as.data.frame(str_split_fixed(tag$V3, " ", 2))
View(tag2)
tag3 <- as.data.frame(str_split_fixed(tag2$V2, ":", 2))
View(tag3)
rental_total$StartMonth <- tag$V1
rental_total$StartDay <- tag$V2
rental_total$StartYear <- tag2$V1
rental_total$StartHour <- tag3$V1
rental_total$StartMinute <- tag3$V2
tag.stop <- as.data.frame(str_split_fixed(rental_total$StopTime, "/", 3))
rental_total$StopMonth <- tag.stop$V1
rental_total$StopDay <- tag.stop$V2
tag.stop2 <- as.data.frame(str_split_fixed(tag.stop$V3, " ", 2))
rental_total$StopYear <- tag.stop2$V1
tag.stop3 <- as.data.frame(str_split_fixed(tag.stop2$V2, ":", 2))
rental_total$StopHour <- tag.stop3$V1
rental_total$StopMinute <- tag.stop3$V2
rental_total <- rental_total[, - which(colnames(rental_total) == 'StartTime')]
rental_total <- rental_total[, - which(colnames(rental_total) == 'StopTime')]
training <- rental_total[, which(rental_total$StartDay < 20)]
rental_total$StartDay <- as.numeric(levels(rental_total$StartDay))[rental_total$StartDay]
class(rental_total$StartDay)
training <- rental_total[, which(rental_total$StartDay < 20)]
training <- rental_total[which(rental_total$StartDay < 20),]
testing <- rental_total[-which(rental_total$StartDay < 20),]
rental_total$StartMonth <- as.numeric(levels(rental_total$StartMonth))[rental_total$StartMonth]
rental_total$StartYear <- as.numeric(levels(rental_total$StartYear))[rental_total$StartYear]
rental_total$StartHour <- as.numeric(levels(rental_total$StartHour))[rental_total$StartHour]
rental_total$StartMinute <- as.numeric(levels(rental_total$StartMinute))[rental_total$StartMinute]
rental_total$StopDay <- as.numeric(levels(rental_total$StopDay))[rental_total$StopDay]
rental_total$StopMonth <- as.numeric(levels(rental_total$StopMonth))[rental_total$StopMonth]
rental_total$StopYear <- as.numeric(levels(rental_total$StopYear))[rental_total$StopYear]
rental_total$StopHour <- as.numeric(levels(rental_total$StopHour))[rental_total$StopHour]
rental_total$StopMinute <- as.numeric(levels(rental_total$StopMinute))[rental_total$StopMinute]
training <- rental_total[which(rental_total$StartDay < 20),]
testing <- rental_total[-which(rental_total$StartDay < 20),]
View(testing)
class(training[,8])
View(training)
class(training[,6])
as.factor(training$UserType)
training$UserType <- as.factor(training$UserType)
as.numeric(levels(training$UserType))[training$UserType]
as.numeric.factor <- function(x) {seq_along(levels(x))[x]}
training$UserType <- as.numeric.factor(training$UserType)
testing$UserType <- as.numeric.factor(testing$UserType)
testing <- rental_total[-which(rental_total$StartDay < 20),]
rental_total$UserType <- as.factor(rental_total$UserType)
as.numeric.factor <- function(x) {seq_along(levels(x))[x]}
rental_total$UserType <- as.numeric.factor(rental_total$UserType)
rental_total[which(rental_total$UserType == 2),]
training <- rental_total[which(rental_total$StartDay < 20),]
testing <- rental_total[-which(rental_total$StartDay < 20),]
View(rental_total)
x <- training$StartHour
hist.StartHour<-hist(x, breaks=5, col="blue", xlab="StartHour",
main="Pitt Bike Trips by Hour of Day")
training[which(training$StartHour==25),]
hist.StartHour<-hist(x, breaks=23, col="blue", xlab="StartHour",
main="Pitt Bike Trips by Hour of Day")
density(x)
d <- density(x)
plot(d, main="Pitt Bike Trips by Hour of Day")
polygon(d, col="blue", border="red")
library(stringr) # str_split_fixed()
HealthyRideRentals.2015.Q3 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q3/HealthyRideRentals 2015 Q3.csv", stringsAsFactors = FALSE)
HealthyRideRentals.2015.Q4 <- read.csv("~/Documents/Semester 2/DM/final project/HealthyRideTripData2015Q4/HealthyRideRentals 2015 Q4.csv", stringsAsFactors = FALSE)
rental_total <- rbind(HealthyRideRentals.2015.Q3,HealthyRideRentals.2015.Q4)
# delete StationName attributes, only using StationID to do prediction
rental_total <- rental_total[, c(1,2,3,4,5,6,8,10)]
# delete rows with missing values
rental_total$UserType[which(rental_total$UserType == "")] <- NA
rental_total <- rental_total[complete.cases(rental_total), ]
str(rental_total)
rental_total$StartTime <- as.character(rental_total$StartTime)
rental_total$StopTime <- as.character(rental_total$StopTime)
rental_total$UserType <- as.character(rental_total$UserType)
# Split StartTime and StopTime into Day, Month, Year, Hour, and Minute
##' StartTime
tag <- as.data.frame(str_split_fixed(rental_total$StartTime, "/", 3))
rental_total$StartMonth <- tag$V1
rental_total$StartDay <- tag$V2
tag2 <- as.data.frame(str_split_fixed(tag$V3, " ", 2))
rental_total$StartYear <- tag2$V1
tag3 <- as.data.frame(str_split_fixed(tag2$V2, ":", 2))
rental_total$StartHour <- tag3$V1
rental_total$StartMinute <- tag3$V2
rental_total <- rental_total[, - which(colnames(rental_total) == 'StartTime')]
##' StopTime
tag.stop <- as.data.frame(str_split_fixed(rental_total$StopTime, "/", 3))
rental_total$StopMonth <- tag.stop$V1
rental_total$StopDay <- tag.stop$V2
tag.stop2 <- as.data.frame(str_split_fixed(tag.stop$V3, " ", 2))
rental_total$StopYear <- tag.stop2$V1
tag.stop3 <- as.data.frame(str_split_fixed(tag.stop2$V2, ":", 2))
rental_total$StopHour <- tag.stop3$V1
rental_total$StopMinute <- tag.stop3$V2
rental_total <- rental_total[, - which(colnames(rental_total) == 'StopTime')]
# convert training$UserType from factor into numeric
rental_total$UserType <- as.factor(rental_total$UserType)
as.numeric.factor <- function(x) {seq_along(levels(x))[x]}
rental_total$UserType <- as.numeric.factor(rental_total$UserType)
# Split into training and testing set
rental_total$StartDay <- as.numeric(levels(rental_total$StartDay))[rental_total$StartDay]
rental_total$StartMonth <- as.numeric(levels(rental_total$StartMonth))[rental_total$StartMonth]
rental_total$StartYear <- as.numeric(levels(rental_total$StartYear))[rental_total$StartYear]
rental_total$StartHour <- as.numeric(levels(rental_total$StartHour))[rental_total$StartHour]
rental_total$StartMinute <- as.numeric(levels(rental_total$StartMinute))[rental_total$StartMinute]
rental_total$StopDay <- as.numeric(levels(rental_total$StopDay))[rental_total$StopDay]
rental_total$StopMonth <- as.numeric(levels(rental_total$StopMonth))[rental_total$StopMonth]
rental_total$StopYear <- as.numeric(levels(rental_total$StopYear))[rental_total$StopYear]
rental_total$StopHour <- as.numeric(levels(rental_total$StopHour))[rental_total$StopHour]
rental_total$StopMinute <- as.numeric(levels(rental_total$StopMinute))[rental_total$StopMinute]
training <- rental_total[which(rental_total$StartDay < 20),]
testing <- rental_total[-which(rental_total$StartDay < 20),]
d <- density(training$StartHour)
plot(d, main="Pitt Bike Trips by Hour of Day")
polygon(d, col="blue", border="red")
